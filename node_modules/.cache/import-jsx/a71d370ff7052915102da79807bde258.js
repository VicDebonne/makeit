"use strict";

const React = require("react");

const {
  useInput,
  useApp,
  Text,
  Box
} = require("ink"); // const BigText = require("ink-big-text");
// const Gradient = require("ink-gradient");


const CFonts = require('cfonts');

CFonts.say('Snake Deluxe', {
  font: 'block',
  align: 'center',
  colors: ['red'],
  background: 'black',
  letterSpacing: 1,
  lineHeight: 4,
  space: true,
  maxLength: '0',
  gradient: ['red', 'blue'],
  independentGradient: false,
  transitionGradient: false,
  env: 'node'
});

const App = () => {
  const {
    exit
  } = useApp();
  const [x, setX] = React.useState(1);
  const [y, setY] = React.useState(1);
  useInput((input, key) => {
    if (input === "q") {
      exit();
    }

    if (key.leftArrow) {
      setX(Math.max(1, x - 1));
    }

    if (key.rightArrow) {
      setX(Math.min(20, x + 1));
    }

    if (key.upArrow) {
      setY(Math.max(1, y - 1));
    }

    if (key.downArrow) {
      setY(Math.min(10, y + 1));
    }
  });
  return /*#__PURE__*/React.createElement(Box, {
    flexDirection: "column"
  }, /*#__PURE__*/React.createElement(Text, {
    textAlign: "center"
  }, "Use arrow keys to move the icon. Press \"q\" to exit."), /*#__PURE__*/React.createElement(Box, {
    height: 12,
    paddingLeft: x,
    paddingTop: y
  }, /*#__PURE__*/React.createElement(Text, null, "\uD83D\uDE01")));
};

module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwicmVxdWlyZSIsInVzZUlucHV0IiwidXNlQXBwIiwiVGV4dCIsIkJveCIsIkNGb250cyIsInNheSIsImZvbnQiLCJhbGlnbiIsImNvbG9ycyIsImJhY2tncm91bmQiLCJsZXR0ZXJTcGFjaW5nIiwibGluZUhlaWdodCIsInNwYWNlIiwibWF4TGVuZ3RoIiwiZ3JhZGllbnQiLCJpbmRlcGVuZGVudEdyYWRpZW50IiwidHJhbnNpdGlvbkdyYWRpZW50IiwiZW52IiwiQXBwIiwiZXhpdCIsIngiLCJzZXRYIiwidXNlU3RhdGUiLCJ5Iiwic2V0WSIsImlucHV0Iiwia2V5IiwibGVmdEFycm93IiwiTWF0aCIsIm1heCIsInJpZ2h0QXJyb3ciLCJtaW4iLCJ1cEFycm93IiwiZG93bkFycm93IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0EsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFDQSxNQUFNO0FBQUVDLEVBQUFBLFFBQUY7QUFBWUMsRUFBQUEsTUFBWjtBQUFvQkMsRUFBQUEsSUFBcEI7QUFBMEJDLEVBQUFBO0FBQTFCLElBQWtDSixPQUFPLENBQUMsS0FBRCxDQUEvQyxDLENBQ0E7QUFDQTs7O0FBQ0EsTUFBTUssTUFBTSxHQUFHTCxPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFFQUssTUFBTSxDQUFDQyxHQUFQLENBQVcsY0FBWCxFQUEyQjtBQUMxQkMsRUFBQUEsSUFBSSxFQUFFLE9BRG9CO0FBRTFCQyxFQUFBQSxLQUFLLEVBQUUsUUFGbUI7QUFHMUJDLEVBQUFBLE1BQU0sRUFBRSxDQUFDLEtBQUQsQ0FIa0I7QUFJMUJDLEVBQUFBLFVBQVUsRUFBRSxPQUpjO0FBSzFCQyxFQUFBQSxhQUFhLEVBQUUsQ0FMVztBQU0xQkMsRUFBQUEsVUFBVSxFQUFFLENBTmM7QUFPMUJDLEVBQUFBLEtBQUssRUFBRSxJQVBtQjtBQVExQkMsRUFBQUEsU0FBUyxFQUFFLEdBUmU7QUFTMUJDLEVBQUFBLFFBQVEsRUFBRSxDQUFDLEtBQUQsRUFBUSxNQUFSLENBVGdCO0FBVTFCQyxFQUFBQSxtQkFBbUIsRUFBRSxLQVZLO0FBVzFCQyxFQUFBQSxrQkFBa0IsRUFBRSxLQVhNO0FBWTFCQyxFQUFBQSxHQUFHLEVBQUU7QUFacUIsQ0FBM0I7O0FBZUEsTUFBTUMsR0FBRyxHQUFHLE1BQU07QUFDZCxRQUFNO0FBQUVDLElBQUFBO0FBQUYsTUFBV2xCLE1BQU0sRUFBdkI7QUFDQSxRQUFNLENBQUNtQixDQUFELEVBQUlDLElBQUosSUFBWXZCLEtBQUssQ0FBQ3dCLFFBQU4sQ0FBZSxDQUFmLENBQWxCO0FBQ0EsUUFBTSxDQUFDQyxDQUFELEVBQUlDLElBQUosSUFBWTFCLEtBQUssQ0FBQ3dCLFFBQU4sQ0FBZSxDQUFmLENBQWxCO0FBRUF0QixFQUFBQSxRQUFRLENBQUMsQ0FBQ3lCLEtBQUQsRUFBUUMsR0FBUixLQUFnQjtBQUNyQixRQUFJRCxLQUFLLEtBQUssR0FBZCxFQUFtQjtBQUNmTixNQUFBQSxJQUFJO0FBQ1A7O0FBRUQsUUFBSU8sR0FBRyxDQUFDQyxTQUFSLEVBQW1CO0FBQ2ZOLE1BQUFBLElBQUksQ0FBQ08sSUFBSSxDQUFDQyxHQUFMLENBQVMsQ0FBVCxFQUFZVCxDQUFDLEdBQUcsQ0FBaEIsQ0FBRCxDQUFKO0FBQ0g7O0FBRUQsUUFBSU0sR0FBRyxDQUFDSSxVQUFSLEVBQW9CO0FBQ2hCVCxNQUFBQSxJQUFJLENBQUNPLElBQUksQ0FBQ0csR0FBTCxDQUFTLEVBQVQsRUFBYVgsQ0FBQyxHQUFHLENBQWpCLENBQUQsQ0FBSjtBQUNIOztBQUVELFFBQUlNLEdBQUcsQ0FBQ00sT0FBUixFQUFpQjtBQUNiUixNQUFBQSxJQUFJLENBQUNJLElBQUksQ0FBQ0MsR0FBTCxDQUFTLENBQVQsRUFBWU4sQ0FBQyxHQUFHLENBQWhCLENBQUQsQ0FBSjtBQUNIOztBQUVELFFBQUlHLEdBQUcsQ0FBQ08sU0FBUixFQUFtQjtBQUNmVCxNQUFBQSxJQUFJLENBQUNJLElBQUksQ0FBQ0csR0FBTCxDQUFTLEVBQVQsRUFBYVIsQ0FBQyxHQUFHLENBQWpCLENBQUQsQ0FBSjtBQUNIO0FBQ0osR0FwQk8sQ0FBUjtBQXNCQSxzQkFDSSxvQkFBQyxHQUFEO0FBQUssSUFBQSxhQUFhLEVBQUM7QUFBbkIsa0JBSUksb0JBQUMsSUFBRDtBQUFNLElBQUEsU0FBUyxFQUFDO0FBQWhCLDZEQUpKLGVBS0ksb0JBQUMsR0FBRDtBQUFLLElBQUEsTUFBTSxFQUFFLEVBQWI7QUFBaUIsSUFBQSxXQUFXLEVBQUVILENBQTlCO0FBQWlDLElBQUEsVUFBVSxFQUFFRztBQUE3QyxrQkFDSSxvQkFBQyxJQUFELHVCQURKLENBTEosQ0FESjtBQVdILENBdENEOztBQXdDQVcsTUFBTSxDQUFDQyxPQUFQLEdBQWlCakIsR0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmNvbnN0IFJlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xuY29uc3QgeyB1c2VJbnB1dCwgdXNlQXBwLCBUZXh0LCBCb3ggfSA9IHJlcXVpcmUoXCJpbmtcIik7XG4vLyBjb25zdCBCaWdUZXh0ID0gcmVxdWlyZShcImluay1iaWctdGV4dFwiKTtcbi8vIGNvbnN0IEdyYWRpZW50ID0gcmVxdWlyZShcImluay1ncmFkaWVudFwiKTtcbmNvbnN0IENGb250cyA9IHJlcXVpcmUoJ2Nmb250cycpO1xuXG5DRm9udHMuc2F5KCdTbmFrZSBEZWx1eGUnLCB7XG5cdGZvbnQ6ICdibG9jaycsXG5cdGFsaWduOiAnY2VudGVyJyxcblx0Y29sb3JzOiBbJ3JlZCddLFxuXHRiYWNrZ3JvdW5kOiAnYmxhY2snLFxuXHRsZXR0ZXJTcGFjaW5nOiAxLFxuXHRsaW5lSGVpZ2h0OiA0LFxuXHRzcGFjZTogdHJ1ZSxcblx0bWF4TGVuZ3RoOiAnMCcsXG5cdGdyYWRpZW50OiBbJ3JlZCcsICdibHVlJ10sXG5cdGluZGVwZW5kZW50R3JhZGllbnQ6IGZhbHNlLFxuXHR0cmFuc2l0aW9uR3JhZGllbnQ6IGZhbHNlLFxuXHRlbnY6ICdub2RlJ1xufSk7XG5cbmNvbnN0IEFwcCA9ICgpID0+IHtcbiAgICBjb25zdCB7IGV4aXQgfSA9IHVzZUFwcCgpO1xuICAgIGNvbnN0IFt4LCBzZXRYXSA9IFJlYWN0LnVzZVN0YXRlKDEpO1xuICAgIGNvbnN0IFt5LCBzZXRZXSA9IFJlYWN0LnVzZVN0YXRlKDEpO1xuXG4gICAgdXNlSW5wdXQoKGlucHV0LCBrZXkpID0+IHtcbiAgICAgICAgaWYgKGlucHV0ID09PSBcInFcIikge1xuICAgICAgICAgICAgZXhpdCgpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGtleS5sZWZ0QXJyb3cpIHtcbiAgICAgICAgICAgIHNldFgoTWF0aC5tYXgoMSwgeCAtIDEpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChrZXkucmlnaHRBcnJvdykge1xuICAgICAgICAgICAgc2V0WChNYXRoLm1pbigyMCwgeCArIDEpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChrZXkudXBBcnJvdykge1xuICAgICAgICAgICAgc2V0WShNYXRoLm1heCgxLCB5IC0gMSkpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGtleS5kb3duQXJyb3cpIHtcbiAgICAgICAgICAgIHNldFkoTWF0aC5taW4oMTAsIHkgKyAxKSk7XG4gICAgICAgIH1cbiAgICB9KTtcblxuICAgIHJldHVybiAoXG4gICAgICAgIDxCb3ggZmxleERpcmVjdGlvbj1cImNvbHVtblwiPlxuXHRcdFx0ey8qIDxHcmFkaWVudCBuYW1lPVwicmFpbmJvd1wiPlxuXHRcdFx0XHQ8QmlnVGV4dCB0ZXh0PVwic25ha2UgZGVsdXhlXCIvPlxuXHRcdFx0PC9HcmFkaWVudD4gKi99XG4gICAgICAgICAgICA8VGV4dCB0ZXh0QWxpZ249XCJjZW50ZXJcIj5Vc2UgYXJyb3cga2V5cyB0byBtb3ZlIHRoZSBpY29uLiBQcmVzcyBcInFcIiB0byBleGl0LjwvVGV4dD5cbiAgICAgICAgICAgIDxCb3ggaGVpZ2h0PXsxMn0gcGFkZGluZ0xlZnQ9e3h9IHBhZGRpbmdUb3A9e3l9PlxuICAgICAgICAgICAgICAgIDxUZXh0PvCfmIE8L1RleHQ+XG4gICAgICAgICAgICA8L0JveD5cbiAgICAgICAgPC9Cb3g+XG4gICAgKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gQXBwO1xuIl19